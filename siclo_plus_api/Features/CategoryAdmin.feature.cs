// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace siclo_plus_api.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("CategoryAdmin", Description="API endpoint  for category", SourceFile="Features\\CategoryAdmin.feature", SourceLine=0)]
    public partial class CategoryAdminFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "CategoryAdmin.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "CategoryAdmin", "API endpoint  for category", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _01_Post_Category_Admin(string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "APICategoryAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Post_category_admin", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given(string.Format("Send the post request for category admin {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_Post_category_admin, 200", new string[] {
                "APICategoryAdmin"}, SourceLine=10)]
        public virtual void _01_Post_Category_Admin_200()
        {
#line 5
this._01_Post_Category_Admin("200", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_Post_category_admin, 400", new string[] {
                "APICategoryAdmin"}, SourceLine=10)]
        public virtual void _01_Post_Category_Admin_400()
        {
#line 5
this._01_Post_Category_Admin("400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_Post_category_admin, 401", new string[] {
                "APICategoryAdmin"}, SourceLine=10)]
        public virtual void _01_Post_Category_Admin_401()
        {
#line 5
this._01_Post_Category_Admin("401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_Post_category_admin, 404", new string[] {
                "APICategoryAdmin"}, SourceLine=10)]
        public virtual void _01_Post_Category_Admin_404()
        {
#line 5
this._01_Post_Category_Admin("404", ((string[])(null)));
#line hidden
        }
        
        public virtual void _02_Put_Category_Admin(string name, string description, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "APICategoryAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("description", description);
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Put_category_admin", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 17
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 18
 testRunner.Given(string.Format("Send the put request for category admin {0} {1} {2}", response, name, description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 19
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02_Put_category_admin, Variant 0", new string[] {
                "APICategoryAdmin"}, SourceLine=22)]
        public virtual void _02_Put_Category_Admin_Variant0()
        {
#line 17
this._02_Put_Category_Admin("Nameforcategorytest", "Thisbrandisjustfortest", "200", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02_Put_category_admin, Variant 1", new string[] {
                "APICategoryAdmin"}, SourceLine=22)]
        public virtual void _02_Put_Category_Admin_Variant1()
        {
#line 17
this._02_Put_Category_Admin("Nameforcategorytest", "Thisbrandisjustfortest", "400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02_Put_category_admin, Variant 2", new string[] {
                "APICategoryAdmin"}, SourceLine=22)]
        public virtual void _02_Put_Category_Admin_Variant2()
        {
#line 17
this._02_Put_Category_Admin("Nameforcategorytest", "Thisbrandisjustfortest", "401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02_Put_category_admin, Variant 3", new string[] {
                "APICategoryAdmin"}, SourceLine=22)]
        public virtual void _02_Put_Category_Admin_Variant3()
        {
#line 17
this._02_Put_Category_Admin("Nameforcategorytest", "Thisbrandisjustfortest", "404", ((string[])(null)));
#line hidden
        }
        
        public virtual void _03_Delete_Category_Admin_Id(string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "APICategoryAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Delete_category_admin_id", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 29
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 30
 testRunner.Given(string.Format("Send the delete request for category admin id {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 31
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03_Delete_category_admin_id, 204", new string[] {
                "APICategoryAdmin"}, SourceLine=34)]
        public virtual void _03_Delete_Category_Admin_Id_204()
        {
#line 29
this._03_Delete_Category_Admin_Id("204", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03_Delete_category_admin_id, 400", new string[] {
                "APICategoryAdmin"}, SourceLine=34)]
        public virtual void _03_Delete_Category_Admin_Id_400()
        {
#line 29
this._03_Delete_Category_Admin_Id("400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03_Delete_category_admin_id, 401", new string[] {
                "APICategoryAdmin"}, SourceLine=34)]
        public virtual void _03_Delete_Category_Admin_Id_401()
        {
#line 29
this._03_Delete_Category_Admin_Id("401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03_Delete_category_admin_id, 404", new string[] {
                "APICategoryAdmin"}, SourceLine=34)]
        public virtual void _03_Delete_Category_Admin_Id_404()
        {
#line 29
this._03_Delete_Category_Admin_Id("404", ((string[])(null)));
#line hidden
        }
        
        public virtual void _04_Put_Category_Admin_Picture(string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "APICategoryAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Put_category_admin_picture", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 41
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 42
 testRunner.Given(string.Format("Send the put request for category admin_picture {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 43
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04_Put_category_admin_picture, 200", new string[] {
                "APICategoryAdmin"}, SourceLine=46)]
        public virtual void _04_Put_Category_Admin_Picture_200()
        {
#line 41
this._04_Put_Category_Admin_Picture("200", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04_Put_category_admin_picture, 401", new string[] {
                "APICategoryAdmin"}, SourceLine=46)]
        public virtual void _04_Put_Category_Admin_Picture_401()
        {
#line 41
this._04_Put_Category_Admin_Picture("401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04_Put_category_admin_picture, 404", new string[] {
                "APICategoryAdmin"}, SourceLine=46)]
        public virtual void _04_Put_Category_Admin_Picture_404()
        {
#line 41
this._04_Put_Category_Admin_Picture("404", ((string[])(null)));
#line hidden
        }
        
        public virtual void _05_Delete_Category_Admin_Picture(string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "APICategoryAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Delete_category_admin_picture", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 52
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 53
 testRunner.Given(string.Format("Send the delete request for category admin_picture {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 54
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05_Delete_category_admin_picture, 204", new string[] {
                "APICategoryAdmin"}, SourceLine=57)]
        public virtual void _05_Delete_Category_Admin_Picture_204()
        {
#line 52
this._05_Delete_Category_Admin_Picture("204", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05_Delete_category_admin_picture, 400", new string[] {
                "APICategoryAdmin"}, SourceLine=57)]
        public virtual void _05_Delete_Category_Admin_Picture_400()
        {
#line 52
this._05_Delete_Category_Admin_Picture("400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05_Delete_category_admin_picture, 401", new string[] {
                "APICategoryAdmin"}, SourceLine=57)]
        public virtual void _05_Delete_Category_Admin_Picture_401()
        {
#line 52
this._05_Delete_Category_Admin_Picture("401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05_Delete_category_admin_picture, 404", new string[] {
                "APICategoryAdmin"}, SourceLine=57)]
        public virtual void _05_Delete_Category_Admin_Picture_404()
        {
#line 52
this._05_Delete_Category_Admin_Picture("404", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion

// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace siclo_plus_api.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("BrandAdmin", Description="\tAPI endpoint  for brand admin", SourceFile="Features\\BrandAdmin.feature", SourceLine=0)]
    public partial class BrandAdminFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "BrandAdmin.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "BrandAdmin", "\tAPI endpoint  for brand admin", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _01_Post_Brand_Admin(string name, string description, string color, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "bisiBrandAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("description", description);
            argumentsOfScenario.Add("color", color);
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Post_brand_admin", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given(string.Format("Send the post request for brand admin {0} {1} {2} {3}", name, description, color, response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_Post_brand_admin, Variant 0", new string[] {
                "bisiBrandAdmin"}, SourceLine=10)]
        public virtual void _01_Post_Brand_Admin_Variant0()
        {
#line 5
this._01_Post_Brand_Admin("Name for brand test", "This brand is just for test", "#d62e2e", "200", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_Post_brand_admin, Variant 1", new string[] {
                "bisiBrandAdmin"}, SourceLine=10)]
        public virtual void _01_Post_Brand_Admin_Variant1()
        {
#line 5
this._01_Post_Brand_Admin("Name for brand test", "This brand is just for test", "Color for test", "400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_Post_brand_admin, Variant 2", new string[] {
                "bisiBrandAdmin"}, SourceLine=10)]
        public virtual void _01_Post_Brand_Admin_Variant2()
        {
#line 5
this._01_Post_Brand_Admin("Name for brand test", "This brand is just for test", "#d62e2e", "401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_Post_brand_admin, Variant 3", new string[] {
                "bisiBrandAdmin"}, SourceLine=10)]
        public virtual void _01_Post_Brand_Admin_Variant3()
        {
#line 5
this._01_Post_Brand_Admin("Name for brand test", "This brand is just for test", "#d62e2e", "404", ((string[])(null)));
#line hidden
        }
        
        public virtual void _02_Put_Brand_Admin_Id(string name, string description, string color, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "bisiBrandAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("description", description);
            argumentsOfScenario.Add("color", color);
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Put_brand_admin_id", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 17
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 18
 testRunner.Given(string.Format("Send the put request for brand admin_id {0} {1} {2} {3}", name, description, color, response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 19
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.And("Delete this brand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02_Put_brand_admin_id, Variant 0", new string[] {
                "bisiBrandAdmin"}, SourceLine=23)]
        public virtual void _02_Put_Brand_Admin_Id_Variant0()
        {
#line 17
this._02_Put_Brand_Admin_Id("Name for brand test", "This brand is just for test", "#d62e2e", "204", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02_Put_brand_admin_id, Variant 1", new string[] {
                "bisiBrandAdmin"}, SourceLine=23)]
        public virtual void _02_Put_Brand_Admin_Id_Variant1()
        {
#line 17
this._02_Put_Brand_Admin_Id("Name for brand test", "This brand is just for test", "#d62e2e", "400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02_Put_brand_admin_id, Variant 2", new string[] {
                "bisiBrandAdmin"}, SourceLine=23)]
        public virtual void _02_Put_Brand_Admin_Id_Variant2()
        {
#line 17
this._02_Put_Brand_Admin_Id("Name for brand test", "This brand is just for test", "#d62e2e", "401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("02_Put_brand_admin_id, Variant 3", new string[] {
                "bisiBrandAdmin"}, SourceLine=23)]
        public virtual void _02_Put_Brand_Admin_Id_Variant3()
        {
#line 17
this._02_Put_Brand_Admin_Id("Name for brand test", "This brand is just for test", "#d62e2e", "404", ((string[])(null)));
#line hidden
        }
        
        public virtual void _03_Delete_Brand_Admin_Id(string name, string description, string color, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "bisiBrandAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("description", description);
            argumentsOfScenario.Add("color", color);
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Delete_brand_admin_id", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 30
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 31
 testRunner.Given(string.Format("Send the delete request for brand admin_id {0} {1} {2} {3}", name, description, color, response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 32
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 33
 testRunner.And("Delete this brand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03_Delete_brand_admin_id, Variant 0", new string[] {
                "bisiBrandAdmin"}, SourceLine=36)]
        public virtual void _03_Delete_Brand_Admin_Id_Variant0()
        {
#line 30
this._03_Delete_Brand_Admin_Id("Name for brand test", "This brand is just for test", "#d62e2e", "400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03_Delete_brand_admin_id, Variant 1", new string[] {
                "bisiBrandAdmin"}, SourceLine=36)]
        public virtual void _03_Delete_Brand_Admin_Id_Variant1()
        {
#line 30
this._03_Delete_Brand_Admin_Id("Name for brand test", "This brand is just for test", "#d62e2e", "401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03_Delete_brand_admin_id, Variant 2", new string[] {
                "bisiBrandAdmin"}, SourceLine=36)]
        public virtual void _03_Delete_Brand_Admin_Id_Variant2()
        {
#line 30
this._03_Delete_Brand_Admin_Id("Name for brand test", "ThIS brand is just for test", "#d62e2e", "404", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("03_Delete_brand_admin_id, Variant 3", new string[] {
                "bisiBrandAdmin"}, SourceLine=36)]
        public virtual void _03_Delete_Brand_Admin_Id_Variant3()
        {
#line 30
this._03_Delete_Brand_Admin_Id("Name for brand test", "This brand is just for test", "#d62e2e", "204", ((string[])(null)));
#line hidden
        }
        
        public virtual void _04_Put_Brand_Admin_Cover(string name, string description, string color, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "bisiBrandAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("description", description);
            argumentsOfScenario.Add("color", color);
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Put_brand_admin_cover", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 43
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 44
 testRunner.Given(string.Format("Send the put request for brand admin cover {0} {1} {2} {3}", name, description, color, response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 45
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
 testRunner.And("Delete this brand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04_Put_brand_admin_cover, Variant 0", new string[] {
                "bisiBrandAdmin"}, SourceLine=49)]
        public virtual void _04_Put_Brand_Admin_Cover_Variant0()
        {
#line 43
this._04_Put_Brand_Admin_Cover("Name for brand test", "This brand is just for test", "#d62e2e", "200", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04_Put_brand_admin_cover, Variant 1", new string[] {
                "bisiBrandAdmin"}, SourceLine=49)]
        public virtual void _04_Put_Brand_Admin_Cover_Variant1()
        {
#line 43
this._04_Put_Brand_Admin_Cover("Name for brand test", "This brand is just for test", "#d62e2e", "401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("04_Put_brand_admin_cover, Variant 2", new string[] {
                "bisiBrandAdmin"}, SourceLine=49)]
        public virtual void _04_Put_Brand_Admin_Cover_Variant2()
        {
#line 43
this._04_Put_Brand_Admin_Cover("Name for brand test", "This brand is just for test", "#d62e2e", "404", ((string[])(null)));
#line hidden
        }
        
        public virtual void _05_Delete_Brand_Admin_Cover(string name, string description, string color, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "bisiBrandAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("description", description);
            argumentsOfScenario.Add("color", color);
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Delete_brand_admin_cover", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 55
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 56
 testRunner.Given(string.Format("Send the delete request for brand admin cover {0} {1} {2} {3}", name, description, color, response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 57
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 58
 testRunner.And("Delete this brand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05_Delete_brand_admin_cover, Variant 0", new string[] {
                "bisiBrandAdmin"}, SourceLine=61)]
        public virtual void _05_Delete_Brand_Admin_Cover_Variant0()
        {
#line 55
this._05_Delete_Brand_Admin_Cover("Name for brand test", "This brand is just for test", "#d62e2e", "400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05_Delete_brand_admin_cover, Variant 1", new string[] {
                "bisiBrandAdmin"}, SourceLine=61)]
        public virtual void _05_Delete_Brand_Admin_Cover_Variant1()
        {
#line 55
this._05_Delete_Brand_Admin_Cover("Name for brand test", "This brand is just for test", "#d62e2e", "401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05_Delete_brand_admin_cover, Variant 2", new string[] {
                "bisiBrandAdmin"}, SourceLine=61)]
        public virtual void _05_Delete_Brand_Admin_Cover_Variant2()
        {
#line 55
this._05_Delete_Brand_Admin_Cover("Name for brand test", "This brand is just for test", "#d62e2e", "404", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("05_Delete_brand_admin_cover, Variant 3", new string[] {
                "bisiBrandAdmin"}, SourceLine=61)]
        public virtual void _05_Delete_Brand_Admin_Cover_Variant3()
        {
#line 55
this._05_Delete_Brand_Admin_Cover("Name for brand test", "This brand is just for test", "#d62e2e", "204", ((string[])(null)));
#line hidden
        }
        
        public virtual void _06_Put_Brand_Admin_Picture(string name, string description, string color, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "bisiBrandAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("description", description);
            argumentsOfScenario.Add("color", color);
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Put_brand_admin_picture", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 68
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 69
 testRunner.Given(string.Format("Send the put request for brand admin picture {0} {1} {2} {3}", name, description, color, response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 70
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 71
 testRunner.And("Delete this brand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("06_Put_brand_admin_picture, Variant 0", new string[] {
                "bisiBrandAdmin"}, SourceLine=74)]
        public virtual void _06_Put_Brand_Admin_Picture_Variant0()
        {
#line 68
this._06_Put_Brand_Admin_Picture("Name for brand test", "This brand is just for test", "#d62e2e", "200", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("06_Put_brand_admin_picture, Variant 1", new string[] {
                "bisiBrandAdmin"}, SourceLine=74)]
        public virtual void _06_Put_Brand_Admin_Picture_Variant1()
        {
#line 68
this._06_Put_Brand_Admin_Picture("Name for brand test", "This brand is just for test", "#d62e2e", "401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("06_Put_brand_admin_picture, Variant 2", new string[] {
                "bisiBrandAdmin"}, SourceLine=74)]
        public virtual void _06_Put_Brand_Admin_Picture_Variant2()
        {
#line 68
this._06_Put_Brand_Admin_Picture("Name for brand test", "This brand is just for test", "#d62e2e", "404", ((string[])(null)));
#line hidden
        }
        
        public virtual void _07_Delete_Brand_Admin_Picture(string name, string description, string color, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "bisiBrandAdmin"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("name", name);
            argumentsOfScenario.Add("description", description);
            argumentsOfScenario.Add("color", color);
            argumentsOfScenario.Add("response", response);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Delete_brand_admin_picture", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 80
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 81
 testRunner.Given(string.Format("Send the delete request for brand admin picture {0} {1} {2} {3}", name, description, color, response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 82
 testRunner.Then(string.Format("The response should match with the expected results {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 83
 testRunner.And("Delete this brand", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("07_Delete_brand_admin_picture, Variant 0", new string[] {
                "bisiBrandAdmin"}, SourceLine=86)]
        public virtual void _07_Delete_Brand_Admin_Picture_Variant0()
        {
#line 80
this._07_Delete_Brand_Admin_Picture("Name for brand test", "This brand is just for test", "#d62e2e", "204", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("07_Delete_brand_admin_picture, Variant 1", new string[] {
                "bisiBrandAdmin"}, SourceLine=86)]
        public virtual void _07_Delete_Brand_Admin_Picture_Variant1()
        {
#line 80
this._07_Delete_Brand_Admin_Picture("Name for brand test", "This brand is just for test", "#d62e2e", "400", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("07_Delete_brand_admin_picture, Variant 2", new string[] {
                "bisiBrandAdmin"}, SourceLine=86)]
        public virtual void _07_Delete_Brand_Admin_Picture_Variant2()
        {
#line 80
this._07_Delete_Brand_Admin_Picture("Name for brand test", "This brand is just for test", "#d62e2e", "401", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("07_Delete_brand_admin_picture, Variant 3", new string[] {
                "bisiBrandAdmin"}, SourceLine=86)]
        public virtual void _07_Delete_Brand_Admin_Picture_Variant3()
        {
#line 80
this._07_Delete_Brand_Admin_Picture("Name for brand test", "This brand is just for test", "#d62e2e", "404", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
